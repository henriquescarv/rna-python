name: Machine Learning Pipeline

on:
  push:
    branches:
      - main
      - manu
  pull_request:
    branches:
      - main

jobs:
  train_and_evaluate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run multiclass model
      run: |
        python multiclass.py
      id: multiclass
      continue-on-error: true 

    - name: Check accuracy for multiclass
      run: |
        python -c "import numpy as np; accuracy = np.mean(np.argmax(y_test, axis=1) == y_pred_test) * 100; assert accuracy > 50, 'Acurácia abaixo de 50%'"
      if: steps.multiclass.outcome == 'success'

    - name: Run binary model
      run: |
        python binary.py
      id: binary
      continue-on-error: true

    - name: Check accuracy for binary model
      run: |
        python -c "import numpy as np; accuracy = np.mean(y_pred_test == y_test_normalized) * 100; assert accuracy > 50, 'Acurácia abaixo de 50%'"
      if: steps.binary.outcome == 'success'

    - name: Run regression model
      run: |
        python regression.py
      id: regression
      continue-on-error: true

    - name: Check R2 for regression model
      run: |
        python -c "import numpy as np; r2 = np.corrcoef(y_test_normalized, y_test_pred)[0, 1]; assert r2 > 0.5, 'R2 abaixo de 0.5'"
      if: steps.regression.outcome == 'success'
